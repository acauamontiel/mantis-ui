{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js","src/js/app/index.js","src/js/components/navbar.js","src/js/modules/batch-instantiate.js","src/js/modules/init.js"],"names":[],"mappings":"AAAA;;;ACCA;;;;AAEA;;;;AAEA;;;;;;AALA,QAAQ,IAAR,CAAa,YAAb;AAEA;;AAEA;;;AAGA,IAAM,MAAM,qBAAZ;;AAEA,IAAI,IAAJ,CAAS,YAAY;AACpB,SAAQ,GAAR,CAAY,kBAAZ,EAAgC,wCAAhC;AACA,SAAQ,KAAR,CAAc,IAAd;;AAEA,iCAAiB,SAAjB;;AAEA,SAAQ,OAAR,CAAgB,YAAhB;AACA,CAPD;;;;;;;;;;;ACTA;;;;;;;;IAEqB,G;AACpB,gBAAc;AAAA;;AACb,OAAK,EAAL,GAAU,KAAK,GAAL,EAAV;AACA;;;;uBAEI,Q,EAAU;AACd,kBAAK,IAAL,CAAU,IAAV,EAAgB,QAAhB;AACA;;;;;;kBAPmB,G;;;;;;;;;;;;;ICFA,M;AACpB,iBAAY,QAAZ,EAAsB;AAAA;;AACrB,OAAK,eAAL,GAAuB,SAAvB;AACA,OAAK,gBAAL,GAA2B,KAAK,eAAhC;AACA,OAAK,YAAL,GAAuB,KAAK,eAA5B;AACA,OAAK,mBAAL,GAA2B,CAAG,KAAK,gBAAR,eAAmC,MAAnC,CAA0C,CAA1C,CAA3B;;AAEA,OAAK,QAAL,GAAgB,EAAE,QAAF,CAAhB;AACA,OAAK,SAAL,GAAiB,KAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,gBAAxB,CAAjB;AACA,OAAK,KAAL,GAAa,KAAK,QAAL,CAAc,IAAd,CAAmB,KAAK,YAAxB,CAAb;AACA;;;;yBAYM;AACN,QAAK,KAAL,CAAW,EAAX,CAAc,KAAK,QAAL,CAAc,KAA5B;AACA;;;yBAEM;AACN,QAAK,IAAL;AACA;;;sBAhBc;AAAA;;AACd,UAAO;AACN,WAAO;AACN,YAAO,iBAAM;AACZ,YAAK,SAAL,CAAe,WAAf,CAA2B,MAAK,mBAAhC;AACA;AAHK;AADD,IAAP;AAOA;;;;;;kBApBmB,M;;;;;;;;;kBCAN,UAAU,QAAV,EAAoB,IAApB,EAA0B;AACxC,KAAI,YAAY,EAAhB;;AAEA,GAAE,QAAF,EAAY,IAAZ,CAAiB,UAAU,KAAV,EAAiB,QAAjB,EAA2B;AAC3C,MAAI,WAAW,IAAI,IAAJ,CAAS,QAAT,CAAf;AACA,YAAU,IAAV,CAAe,QAAf;AACA,WAAS,IAAT;AACA,EAJD;;AAMA,QAAO,SAAP;AACA,C;;;;;;;;;kBCVc,UAAU,QAAV,EAAoB;AAClC,KAAI,SAAS,UAAT,KAAwB,UAA5B,EAAwC;AACvC,WAAS,IAAT,CAAc,IAAd;AACA;AACA;;AAED,UAAS,gBAAT,CACC,kBADD,EAEC,SAAS,IAAT,CAAc,IAAd,CAFD,EAGC,KAHD;AAKA,C","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","console.time('Initialize');\nimport App from './app/index';\n// Modules\nimport batchInstantiate from './modules/batch-instantiate';\n// Components\nimport Navbar from './components/navbar';\n\nconst app = new App();\n\napp.init(function () {\n\tconsole.log('%cMantis Starter', 'color: #338656; font: 50px sans-serif;');\n\tconsole.debug(this);\n\n\tbatchInstantiate('.navbar', Navbar);\n\n\tconsole.timeEnd('Initialize');\n});\n","import init from '../modules/init';\n\nexport default class App {\n\tconstructor() {\n\t\tthis.id = Date.now();\n\t}\n\n\tinit(callback) {\n\t\tinit.call(this, callback);\n\t}\n}\n","export default class Navbar {\n\tconstructor($element) {\n\t\tthis.elementSelector = '.navbar';\n\t\tthis.collapseSelector = `${this.elementSelector}__collapse`;\n\t\tthis.menuSelector = `${this.elementSelector}__menu`;\n\t\tthis.collapseActiveClass = `${this.collapseSelector}--active`.substr(1);\n\n\t\tthis.$element = $($element);\n\t\tthis.$collapse = this.$element.find(this.collapseSelector);\n\t\tthis.$menu = this.$element.find(this.menuSelector);\n\t}\n\n\tget handlers() {\n\t\treturn {\n\t\t\t$menu: {\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.$collapse.toggleClass(this.collapseActiveClass);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tbind() {\n\t\tthis.$menu.on(this.handlers.$menu);\n\t}\n\n\tinit() {\n\t\tthis.bind();\n\t}\n}\n","export default function (selector, Clss) {\n\tvar instances = [];\n\n\t$(selector).each(function (index, $element) {\n\t\tlet instance = new Clss($element);\n\t\tinstances.push(instance);\n\t\tinstance.init();\n\t});\n\n\treturn instances;\n}\n","export default function (callback) {\n\tif (document.readyState === 'complete') {\n\t\tcallback.bind(this);\n\t\treturn;\n\t}\n\n\tdocument.addEventListener(\n\t\t'DOMContentLoaded',\n\t\tcallback.bind(this),\n\t\tfalse\n\t);\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvYXBwLmpzIiwic3JjL2pzL2FwcC9pbmRleC5qcyIsInNyYy9qcy9jb21wb25lbnRzL25hdmJhci5qcyIsInNyYy9qcy9tb2R1bGVzL2JhdGNoLWluc3RhbnRpYXRlLmpzIiwic3JjL2pzL21vZHVsZXMvaW5pdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQ0E7Ozs7QUFFQTs7OztBQUVBOzs7Ozs7QUFMQSxRQUFRLElBQVIsQ0FBYSxZQUFiO0FBRUE7O0FBRUE7OztBQUdBLElBQU0sTUFBTSxxQkFBWjs7QUFFQSxJQUFJLElBQUosQ0FBUyxZQUFZO0FBQ3BCLFNBQVEsR0FBUixDQUFZLGtCQUFaLEVBQWdDLHdDQUFoQztBQUNBLFNBQVEsS0FBUixDQUFjLElBQWQ7O0FBRUEsaUNBQWlCLFNBQWpCOztBQUVBLFNBQVEsT0FBUixDQUFnQixZQUFoQjtBQUNBLENBUEQ7Ozs7Ozs7Ozs7O0FDVEE7Ozs7Ozs7O0lBRXFCLEc7QUFDcEIsZ0JBQWM7QUFBQTs7QUFDYixPQUFLLEVBQUwsR0FBVSxLQUFLLEdBQUwsRUFBVjtBQUNBOzs7O3VCQUVJLFEsRUFBVTtBQUNkLGtCQUFLLElBQUwsQ0FBVSxJQUFWLEVBQWdCLFFBQWhCO0FBQ0E7Ozs7OztrQkFQbUIsRzs7Ozs7Ozs7Ozs7OztJQ0ZBLE07QUFDcEIsaUJBQVksUUFBWixFQUFzQjtBQUFBOztBQUNyQixPQUFLLGVBQUwsR0FBdUIsU0FBdkI7QUFDQSxPQUFLLGdCQUFMLEdBQTJCLEtBQUssZUFBaEM7QUFDQSxPQUFLLFlBQUwsR0FBdUIsS0FBSyxlQUE1QjtBQUNBLE9BQUssbUJBQUwsR0FBMkIsQ0FBRyxLQUFLLGdCQUFSLGVBQW1DLE1BQW5DLENBQTBDLENBQTFDLENBQTNCOztBQUVBLE9BQUssUUFBTCxHQUFnQixFQUFFLFFBQUYsQ0FBaEI7QUFDQSxPQUFLLFNBQUwsR0FBaUIsS0FBSyxRQUFMLENBQWMsSUFBZCxDQUFtQixLQUFLLGdCQUF4QixDQUFqQjtBQUNBLE9BQUssS0FBTCxHQUFhLEtBQUssUUFBTCxDQUFjLElBQWQsQ0FBbUIsS0FBSyxZQUF4QixDQUFiO0FBQ0E7Ozs7eUJBWU07QUFDTixRQUFLLEtBQUwsQ0FBVyxFQUFYLENBQWMsS0FBSyxRQUFMLENBQWMsS0FBNUI7QUFDQTs7O3lCQUVNO0FBQ04sUUFBSyxJQUFMO0FBQ0E7OztzQkFoQmM7QUFBQTs7QUFDZCxVQUFPO0FBQ04sV0FBTztBQUNOLFlBQU8saUJBQU07QUFDWixZQUFLLFNBQUwsQ0FBZSxXQUFmLENBQTJCLE1BQUssbUJBQWhDO0FBQ0E7QUFISztBQURELElBQVA7QUFPQTs7Ozs7O2tCQXBCbUIsTTs7Ozs7Ozs7O2tCQ0FOLFVBQVUsUUFBVixFQUFvQixJQUFwQixFQUEwQjtBQUN4QyxLQUFJLFlBQVksRUFBaEI7O0FBRUEsR0FBRSxRQUFGLEVBQVksSUFBWixDQUFpQixVQUFVLEtBQVYsRUFBaUIsUUFBakIsRUFBMkI7QUFDM0MsTUFBSSxXQUFXLElBQUksSUFBSixDQUFTLFFBQVQsQ0FBZjtBQUNBLFlBQVUsSUFBVixDQUFlLFFBQWY7QUFDQSxXQUFTLElBQVQ7QUFDQSxFQUpEOztBQU1BLFFBQU8sU0FBUDtBQUNBLEM7Ozs7Ozs7OztrQkNWYyxVQUFVLFFBQVYsRUFBb0I7QUFDbEMsS0FBSSxTQUFTLFVBQVQsS0FBd0IsVUFBNUIsRUFBd0M7QUFDdkMsV0FBUyxJQUFULENBQWMsSUFBZDtBQUNBO0FBQ0E7O0FBRUQsVUFBUyxnQkFBVCxDQUNDLGtCQURELEVBRUMsU0FBUyxJQUFULENBQWMsSUFBZCxDQUZELEVBR0MsS0FIRDtBQUtBLEMiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiY29uc29sZS50aW1lKCdJbml0aWFsaXplJyk7XG5pbXBvcnQgQXBwIGZyb20gJy4vYXBwL2luZGV4Jztcbi8vIE1vZHVsZXNcbmltcG9ydCBiYXRjaEluc3RhbnRpYXRlIGZyb20gJy4vbW9kdWxlcy9iYXRjaC1pbnN0YW50aWF0ZSc7XG4vLyBDb21wb25lbnRzXG5pbXBvcnQgTmF2YmFyIGZyb20gJy4vY29tcG9uZW50cy9uYXZiYXInO1xuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5cbmFwcC5pbml0KGZ1bmN0aW9uICgpIHtcblx0Y29uc29sZS5sb2coJyVjTWFudGlzIFN0YXJ0ZXInLCAnY29sb3I6ICMzMzg2NTY7IGZvbnQ6IDUwcHggc2Fucy1zZXJpZjsnKTtcblx0Y29uc29sZS5kZWJ1Zyh0aGlzKTtcblxuXHRiYXRjaEluc3RhbnRpYXRlKCcubmF2YmFyJywgTmF2YmFyKTtcblxuXHRjb25zb2xlLnRpbWVFbmQoJ0luaXRpYWxpemUnKTtcbn0pO1xuIiwiaW1wb3J0IGluaXQgZnJvbSAnLi4vbW9kdWxlcy9pbml0JztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXBwIHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0dGhpcy5pZCA9IERhdGUubm93KCk7XG5cdH1cblxuXHRpbml0KGNhbGxiYWNrKSB7XG5cdFx0aW5pdC5jYWxsKHRoaXMsIGNhbGxiYWNrKTtcblx0fVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmF2YmFyIHtcblx0Y29uc3RydWN0b3IoJGVsZW1lbnQpIHtcblx0XHR0aGlzLmVsZW1lbnRTZWxlY3RvciA9ICcubmF2YmFyJztcblx0XHR0aGlzLmNvbGxhcHNlU2VsZWN0b3IgPSBgJHt0aGlzLmVsZW1lbnRTZWxlY3Rvcn1fX2NvbGxhcHNlYDtcblx0XHR0aGlzLm1lbnVTZWxlY3RvciA9IGAke3RoaXMuZWxlbWVudFNlbGVjdG9yfV9fbWVudWA7XG5cdFx0dGhpcy5jb2xsYXBzZUFjdGl2ZUNsYXNzID0gYCR7dGhpcy5jb2xsYXBzZVNlbGVjdG9yfS0tYWN0aXZlYC5zdWJzdHIoMSk7XG5cblx0XHR0aGlzLiRlbGVtZW50ID0gJCgkZWxlbWVudCk7XG5cdFx0dGhpcy4kY29sbGFwc2UgPSB0aGlzLiRlbGVtZW50LmZpbmQodGhpcy5jb2xsYXBzZVNlbGVjdG9yKTtcblx0XHR0aGlzLiRtZW51ID0gdGhpcy4kZWxlbWVudC5maW5kKHRoaXMubWVudVNlbGVjdG9yKTtcblx0fVxuXG5cdGdldCBoYW5kbGVycygpIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0JG1lbnU6IHtcblx0XHRcdFx0Y2xpY2s6ICgpID0+IHtcblx0XHRcdFx0XHR0aGlzLiRjb2xsYXBzZS50b2dnbGVDbGFzcyh0aGlzLmNvbGxhcHNlQWN0aXZlQ2xhc3MpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxuXG5cdGJpbmQoKSB7XG5cdFx0dGhpcy4kbWVudS5vbih0aGlzLmhhbmRsZXJzLiRtZW51KTtcblx0fVxuXG5cdGluaXQoKSB7XG5cdFx0dGhpcy5iaW5kKCk7XG5cdH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIChzZWxlY3RvciwgQ2xzcykge1xuXHR2YXIgaW5zdGFuY2VzID0gW107XG5cblx0JChzZWxlY3RvcikuZWFjaChmdW5jdGlvbiAoaW5kZXgsICRlbGVtZW50KSB7XG5cdFx0bGV0IGluc3RhbmNlID0gbmV3IENsc3MoJGVsZW1lbnQpO1xuXHRcdGluc3RhbmNlcy5wdXNoKGluc3RhbmNlKTtcblx0XHRpbnN0YW5jZS5pbml0KCk7XG5cdH0pO1xuXG5cdHJldHVybiBpbnN0YW5jZXM7XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAoY2FsbGJhY2spIHtcblx0aWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09ICdjb21wbGV0ZScpIHtcblx0XHRjYWxsYmFjay5iaW5kKHRoaXMpO1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXG5cdFx0J0RPTUNvbnRlbnRMb2FkZWQnLFxuXHRcdGNhbGxiYWNrLmJpbmQodGhpcyksXG5cdFx0ZmFsc2Vcblx0KTtcbn1cbiJdfQ=="}